services:
  db:
    image: postgres:latest
    profiles: [dev]
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${DB_PORT:-5432}:5432'
    volumes:
      - pg-data:/var/lib/postgresql/data

  ci-db:
    image: postgres:latest
    profiles: [ci]
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_DB: ${DB_NAME}
    ports:
      - '${CI_DB_PORT:-5433}:5432'
    volumes:
      - ci-pg-data:/var/lib/postgresql/data

  backend:
    depends_on:
      - ci-db
    build:
      context: '../'
      dockerfile: Dockerfile
      platforms:
        - 'linux/amd64'
    profiles: [ci]
    env_file: '../.env'
    environment:
      - DB_HOST=ci-db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - AUTH_BYPASS=${AUTH_BYPASS}
      - AUTH_USERNAME=${AUTH_USERNAME}
    ports:
      - '${CI_PORT:-8081}:8080'

  auth:
    depends_on:
      - db
    build:
      context: '../'
      dockerfile: Dockerfile.auth
      platforms:
        - 'linux/amd64'
    profiles: [dev]
    env_file: '../.env'
    environment:
      - PORT=8082
      - DB_HOST=db
      - DB_PORT=${DB_PORT:-5432}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - FRONTEND_SOURCE=${FRONTEND_SOURCE}
      - BETTER_AUTH_URL=${BETTER_AUTH_URL}
      - AUTH_ADMIN_USERNAME=${AUTH_ADMIN_USERNAME}
      - AUTH_ADMIN_PASSWORD=${AUTH_ADMIN_PASSWORD}
    ports:
      - '${AUTH_PORT:-8083}:8082'

volumes:
  pg-data:
  ci-pg-data:
